# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Transform a supposed boolean to On or Off. Pass all other values through.
#Given a nil value (undef), bool2httpd will return 'Off'
#
#Example:
#
#    $trace_enable     = false
#    $server_signature = 'mail'
#
#    bool2httpd($trace_enable)
#    # => 'Off'
#    bool2httpd($server_signature)
#    # => 'mail'
#    bool2httpd(undef)
#    # => 'Off'
#
#
#
Puppet::Functions.create_function(:'apache::bool2httpd') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
  raise(Puppet::ParseError, "bool2httpd() wrong number of arguments. Given: #{args.size} for 1)") if args.size != 1

  arg = args[0]

  if arg.nil? or arg == false or arg =~ /false/i or arg == :undef
    return 'Off'
  elsif arg == true or arg =~ /true/i
    return 'On'
  end

  return arg.to_s

  end
end
