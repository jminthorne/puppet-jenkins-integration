# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#       Perform simple validation of a string against the list of known log
#    levels as per http://httpd.apache.org/docs/current/mod/core.html#loglevel
#        validate_apache_loglevel('info')
#
#    Modules maybe specified with their own levels like these:
#        validate_apache_loglevel('warn ssl:info')
#        validate_apache_loglevel('warn mod_ssl.c:info')
#        validate_apache_loglevel('warn ssl_module:info')
#
#    Expected to be used from the main or vhost.
#    
#    Might be used from directory too later as apaceh supports that
#
#
#
Puppet::Functions.create_function(:'apache::validate_apache_log_level') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    if (args.size != 1) then
      raise Puppet::ParseError, ("validate_apache_loglevel(): wrong number of arguments (#{args.length}; must be 1)")
    end

    log_level = args[0]
    msg = "Log level '${log_level}' is not one of the supported Apache HTTP Server log levels."

    raise Puppet::ParseError, (msg) unless log_level =~ Regexp.compile('(emerg|alert|crit|error|warn|notice|info|debug|trace[1-8])')

  
  end
end
